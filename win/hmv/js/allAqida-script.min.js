$(document).ready(() => {
  function e(a, b) {
    return a.map((c) => c.filter((f, m) => !b.includes(m)));
  }
  function d(a, b) {
    return a.map((c) => [b, ...c]);
  }
  $.extend(!0, $.fn.dataTable.defaults, {});
  window.matchMedia("(min-width: 900px)").matches
    ? $.extend(!0, $.fn.dataTable.defaults, {
        dom: '<"dTop"pBfl>rtip',
        pageLength: 3,
        keys: { clipboardOrthogonal: "export" },
        language: {
          paginate: {
            first: "<<&nbsp;ފުރަތަމަ",
            previous: "<&nbsp;ފަހަތަށް",
            next: "ކުރިއަށް&nbsp;>",
            last: "ފަހު&nbsp;>>",
            info: "_INPUT_",
          },
        },
      })
    : $.extend(!0, $.fn.dataTable.defaults, {
        dom: '<"mTop"fl> + <"mTop2"p> + <"mTop3"B> rtip',
        pageLength: 1,
        language: {
          paginate: {
            first: "<<",
            previous: "<",
            next: ">",
            last: ">>",
            info: "_INPUT_",
          },
        },
      });
  const p = Math.max(barbahari_DB.length, barbahariDFK_DB.length);
  resultbarbahariDFK = [];
  for (let a = 0; a < p; a++) {
    var h = barbahari_DB[a] || [];
    h = [h[0] || "", h[4] || "", h[6] || "", ...(barbahariDFK_DB[a] || [])];
    resultbarbahariDFK.push(h);
  }
  resultusooluSunnah = e(usooluSunnah_DB, [4, 5]);
  resultbarbahari = e(barbahari_DB, [1, 2, 3, 7, 8]);
  resultaqidatuRaziyain = e(aqidatuRaziyain_DB, [3]);
  resultkitabulEman = e(kitabulEman_DB, [3, 6, 7]);
  resultnawaqidulislam = e(nawaqidulislam_DB, [2, 6, 7, 8]);
  resultqawaidulArbau = e(qawaidulArbau_DB, [2, 6, 7, 8]);
  resultusooluSiththa = e(usooluSiththa_DB, [2, 6, 7, 8]);
  resultusooluThalaatha = e(usooluThalaatha_DB, [2, 6, 7, 8]);
  resultusooluSunnah = d(resultusooluSunnah, "أصول السنة لأحمد");
  resultbarbahari = d(resultbarbahari, "شرح السنة للبربهاري");
  resultbarbahariDFK = d(resultbarbahariDFK, "شرح السنة للبربهاري DFK");
  resultaqidatuRaziyain = d(resultaqidatuRaziyain, "عقيدة الرازيين");
  resultkitabulEman = d(resultkitabulEman, "كتاب الإيمان لأبي عبيد");
  resultnawaqidulislam = d(resultnawaqidulislam, "نواقض الإسلام");
  resultqawaidulArbau = d(resultqawaidulArbau, "القواعد الأربع");
  resultusooluSiththa = d(resultusooluSiththa, "الأصول الستة");
  resultusooluThalaatha = d(resultusooluThalaatha, "الأصول الثلاثة");
  let n = [
    "شرح السنة للبربهاري;1;اعْلَمُوا أَنَّ الْإِسْلَامَ هُوَ السُّنَّةُ، وَالسُّنَةَ هِيَ الْإِسْلَامُ، وَلَا يَقُومُ أَحَدُهُمَا إِلَّا بِالْآخَرِ.;ތިޔަބައިމީހުން ދަންނާށެވެ. އިސްލާމް ދީނަކީ ސުންނަތެވެ. އަދި ސުންނަތަކީ އިސްލާމް ދީނެވެ. އަދި އެ ދޭތިން ކުރެ އެއް ކަމެއް، އަނެއް ކަމަކާ ލައިގެން މެނުވީ ގާއިމު ނުވާހުއްޓެވެ.;;".split(
      ";"
    ),
  ];
  [
    resultusooluSunnah,
    resultbarbahari,
    resultaqidatuRaziyain,
    resultkitabulEman,
    resultnawaqidulislam,
    resultqawaidulArbau,
    resultusooluSiththa,
    resultusooluThalaatha,
    resultbarbahariDFK,
  ].forEach((a) => {
    var b = n;
    const c = Math.max(b[0]?.length || 0, a[0]?.length || 0);
    for (let f = 0; f < a.length; f++) {
      const m = a[f].concat(Array(c - a[f].length).fill(""));
      b.push(m);
    }
    n = b;
  });
  const g = $("#allAqidaTable").DataTable({
    data: n,
    columns: [
      { data: 0, title: "ފޮތް އަރަބިން" },
      {
        data: 0,
        title: "ފޮތް ދިވެހިން",
        render: function (a, b, c) {
          a = a.replace(
            "أصول السنة لأحمد",
            "އަޙްމަދު ލިޔުނު ސުންނަތުގެ އުސޫލުތައް"
          );
          a = a.replace(
            "شرح السنة للبربهاري",
            "ބަރްބަހާރީ ލިޔުނު ސުންނަތުގެ ޝަރަހަ"
          );
          a = a.replace("عقيدة الرازيين", "ދެ ރާޒީންގެ އަގީދާ");
          a = a.replace(
            "كتاب الإيمان لأبي عبيد",
            "އަބޫ ޢުބައިދުގެ އީމާންކަމުގެ ފޮތް"
          );
          a = a.replace("نواقض الإسلام", "އިސްލާމްކަން ގެއްލޭ ކަންތައް");
          a = a.replace("القواعد الأربع", "ހަތަރު ގަވާއިދު");
          a = a.replace("الأصول الستة", "ހަ އުސޫލު");
          return (a = a.replace("الأصول الثلاثة", "ތިން އުސޫލު"));
        },
      },
      {
        data: 1,
        title: "#",
        render: function (a, b, c) {
          return "#" + a;
        },
      },
      { data: 2, title: "އަރަބި ލިޔުން" },
      {
        data: 2,
        title: "އަރަބި ފިލިނުޖަހައި",
        render: function (a, b, c) {
          return a
            .replace(/[َ|ً|ُ|ٌ|ِ|ٍ|ْ|ّ|~|⁽|⁾|¹²³⁴⁵⁶⁷⁸⁹⁰]/g, "")
            .replace(/(\n)/g, "<br>");
        },
      },
      { data: 3, title: "ދިވެހި ތަރުޖަމާ" },
      { data: 4, title: "ތަޚްރީޖު" },
      { data: 5, title: "އިތުރު ބަރި" },
    ],
    columnDefs: [
      {
        targets: [],
        render: function (a, b, c) {
          return "" !== a
            ? ("‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾<br>" + a).replace(
                /\r\n|\n|\r/g,
                '\t<br class="dtBr">'
              )
            : a;
        },
      },
      {
        targets: "_all",
        render: function (a, b, c) {
          return a.replace(/\r\n|\n|\r/g, '\t<br class="dtBr">');
        },
      },
      {
        className: "ColKitab",
        targets: [0],
        visible: !0,
        searchable: !0,
        searchPanes: { show: !0 },
      },
      {
        className: "ColKitab2",
        targets: [1],
        visible: !1,
        searchable: !0,
        searchPanes: { show: !0 },
      },
      {
        className: "Col1",
        targets: [2],
        visible: !0,
        searchable: !0,
        searchPanes: { show: !1 },
      },
      { className: "allHCol4", targets: [3], visible: !1, searchable: !1 },
      {
        className: "allHCol5",
        targets: [4],
        visible: !0,
        searchable: !0,
        searchPanes: { show: !1 },
      },
      {
        className: "allHCol6",
        targets: [5],
        visible: !0,
        searchable: !0,
        searchPanes: { show: !1 },
      },
      {
        className: "allHCol7",
        targets: [6],
        visible: !0,
        searchable: !0,
        searchPanes: { show: !1 },
      },
      {
        className: "allHCol8",
        targets: [6],
        visible: !0,
        searchable: !0,
        searchPanes: { show: !1 },
      },
      {
        targets: "all",
        render(a, b, c, f) {
          return "export" === b
            ? ((b = document.createElement("div")),
              (b.innerHTML = a),
              b.innerText)
            : a;
        },
      },
    ],
    autoWidth: !1,
    deferRender: !0,
    processing: !0,
    ordering: !1,
    bstateSave: !0,
    stateDuration: "86400",
    orderClasses: !1,
    pagingType: "input",
    searchDelay: 1300,
    lengthMenu: [
      [1, 2, 3, 5],
      ["1 ދައްކާ", 2, 3, 5],
    ],
    keepConditions: !0,
    keys: !0,
    mark: !0,
    search: { smart: !0 },
    language: {
      buttons: {
        copyTitle: "ކޮޕީ",
        copySuccess: { 1: "ކޮޕީ ވީ 1", _: "ކޮޕީ ވީ %d" },
      },
      info: "_TOTAL_ ގެ ތެރެއިން _START_ އިން _END_ އަށް",
      infoFiltered: "(ޖުމްލަ ބެލެވުނީ _MAX_)",
      infoEmpty: "— ނުފެނުނު —",
      lengthMenu: "_MENU_",
      search: "",
      searchPlaceholder: 'ސީދާ ލަފްޒު "މިހެން ހޯދާ"',
      zeroRecords: "<br><br><br><br>— ނުފެނުނު —<br><br><br><br><br>",
      searchPanes: {
        emptyMessage: "— ވަކި އެއްޗެއް ނުޖަހާ —",
        clearMessage: "ފިލްޓަރތައް ދުއްވާލާ",
        collapse: { 0: "ފިލްޓަރ", _: "ފިލްޓަރ (%d)" },
        title: {
          _: "%d ފިލްޓަރ ކުރެވިފާ",
          0: "0 ފިލްޓަރ ކުރެވިފާ",
          1: "1 ފިލްޓަރ ކުރެވިފާ",
        },
      },
    },
    buttons: [
      {
        extend: "copy",
        key: { key: "c", shiftKey: !0 },
        text: "ކޮޕީ",
        messageTop: "ޙަދީޘްއެމްވީ - އެއްކުރަމުންދާ އަޘަރުތައް",
        title: "",
        customize(a) {
          a = a.replace(/\r\n|\n/g, "\t");
          a = a.replace(/ފޮތް އަރަބިން\t/g, "");
          a = a.replace(/ފޮތް ދިވެހިން\t/g, "");
          a = a.replace(/#\t/g, "");
          a = a.replace(/އަރަބި ލިޔުން\t/g, "");
          a = a.replace(/އަރަބި ފިލިނުޖަހައި\t/g, "");
          a = a.replace(/ދިވެހި ތަރުޖަމާ\t/g, "");
          a = a.replace(/ތަޚްރީޖު\t/g, "");
          a = a.replace(/އިތުރު ބަރި\t/g, "");
          a = a.replace(
            /\t‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾/g,
            "\n\n‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\n"
          );
          a = a.replace(/\t\t/g, "\t");
          return (a = a.replace(/\n\n\n\n|\n\n\n|\t|\s\s/g, "\n\n"));
        },
        exportOptions: { columns: [":visible"], rows: [":visible"] },
      },
      {
        extend: "searchPanes",
        key: { key: "f", shiftKey: !0 },
        config: {
          collapse: !1,
          orderable: !1,
          columns: [0, 1],
          cascadePanes: !0,
          dtOpts: { select: { style: "multi" }, ordering: !1 },
        },
      },
      {
        extend: "colvis",
        key: { key: "s", shiftKey: !0 },
        text: "އިތުރު ބަރިތައް",
        background: !1,
      },
    ],
  });
  document.addEventListener(
    "touchstart",
    function (a) {
      a = (a.touches || a.originalEvent.touches)[0];
      k = a.clientX;
      l = a.clientY;
    },
    !1
  );
  document.addEventListener(
    "touchmove",
    function (a) {
      if (k && l) {
        var b = k - a.touches[0].clientX;
        Math.abs(b) > Math.abs(l - a.touches[0].clientY) &&
          (0 < b
            ? g.page("previous").draw("page")
            : g.page("next").draw("page"));
        l = k = null;
      }
    },
    !1
  );
  let k = null,
    l = null;
  if (window.matchMedia("(min-width: 900px)").matches)
    $(".dataTable").on("page.dt", () => {
      $("html, body").animate({ scrollTop: 0 }, "fast");
      $("main-content").focus();
      $(window).scrollTop();
    });
  else
    $(".dataTable").on("page.dt", () => {
      $("html, body").animate({ scrollTop: 195 }, "fast");
      $("main-content").focus();
      $(window).scrollTop();
    });
  window.matchMedia("(min-width: 900px)").matches
    ? ($(".dataTable").addClass("row-border"),
      $("div.dataTables_filter input", g.table().container()).focus())
    : $(".dataTable").addClass("cards");
  $(".paginate_input").prop("type", "search");
  $(".paginate_input").attr("placeholder", "ސަފުހާ...");
  $(document).ready(function () {
    $("#footer").removeClass("hidden");
  });
  $("tbody").on("dblclick", "tr", function () {
    "" !== g.search() && g.search("").draw();
    g.row(this).draw().show().select().draw(!1);
  });
  $(".dataTables_filter input").on("keyup click", function () {
    var a = $(this).val();
    a = a.replace(
      /[َ|ً|ُ|ٌ|ِ|ٍ|ْ|ّ|~|.|،|!|؟|-|ـ|’|”|:|؛|/{|/}|/(|/)|/[|/]|«|»|]/g,
      ""
    );
    $(this).val(a);
  });
});
